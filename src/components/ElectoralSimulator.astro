---
// Datos de las listas electorales
const electoralLists = [
  {
    id: 1,
    name: "Alianza La Libertad Avanza",
    leader: "Javier Milei",
    color: "#8E44AD",
    candidates: [
      "Gonzalo Roca",
      "Laura Soldano", 
      "Marcos Patiño Brizuela",
      "Laura Rodríguez Machado",
      "Enrique Lluch",
      "Evelin Barroso",
      "Jorge Silvestre Pisetta",
      "Romina Caggiano",
      "Guillermo Quiroga"
    ]
  },
  {
    id: 2,
    name: "Provincias Unidas",
    leader: "Martín Llaryora",
    color: "#4A90E2",
    candidates: [
      "Juan Schiaretti",
      "Carolina Basualdo",
      "Miguel Siciliano", 
      "Laura Jure",
      "Ignacio García Aresca",
      "Verónica Navarro",
      "Juan Manuel Llamosas",
      "María Eugenia Romero",
      "Emiliano Paredes"
    ]
  },
  {
    id: 3,
    name: "Defendamos Córdoba",
    leader: "Natalia de la Sota",
    color: "#E74C3C",
    candidates: [
      "Natalia de la Sota",
      "Marcelo Ruiz",
      "Marcela Lastra",
      "Gustavo Rossi",
      "Graciela Fassi",
      "Pedro González Cholaky",
      "Cristina Fernández",
      "Enrique Lastreto",
      "Analía Sánchez"
    ]
  },
  {
    id: 4,
    name: "Fuerza Patria",
    leader: "Pablo Carro",
    color: "#87CEEB",
    candidates: [
      "Pablo Carro",
      "Constanza San Pedro",
      "Pablo Martín Tissera",
      "Florencia Dahbar",
      "Emanuel Rodríguez",
      "Camila Perassi",
      "David Salto",
      "Luciana Córdoba",
      "Nicolás Venecia Giménez"
    ]
  },
  {
    id: 5,
    name: "UCR",
    leader: "Ramón Mestre",
    color: "#FF6B35",
    candidates: [
      "Ramón Mestre",
      "Patricia Rodríguez",
      "Martín Lucas",
      "Norma Ghione",
      "Franco Jular",
      "Lucrecia Cavanna",
      "Héctor Mignola",
      "María Dolores Caballero",
      "Oscar Tuninetti"
    ]
  },
  {
    id: 6,
    name: "PRO",
    leader: "Oscar Agost Carreño",
    color: "#F7DC6F",
    candidates: [
      "Oscar Agost Carreño",
      "Camila Sol Pérez",
      "Francisco Iser",
      "Agustina D'amario",
      "Giussepe Bosco",
      "Silvina Aymond",
      "Pedro Bossa",
      "Romina Auce",
      "Lucas Ujaldon"
    ]
  },
  {
    id: 7,
    name: "Encuentro por la República",
    leader: "Aurelio García Elorrio",
    color: "#FFD700",
    candidates: [
      "Aurelio García Elorrio",
      "Ana Bastán",
      "Juan Teruel",
      "Noelia Perrin",
      "Rodrigo Agrelo",
      "Elena Guerín",
      "Miguel Casañas",
      "Ana Chicala",
      "Palo Ortega"
    ]
  },
  {
    id: 8,
    name: "Frente de Izquierda y los Trabajadores Unidad",
    leader: "Liliana Olivero",
    color: "#C0392B",
    candidates: [
      "Liliana Olivero",
      "Josué Plevich Shaddock",
      "Virginia Caldera Marsengo",
      "Jorge Luis Navarro",
      "Soledad Díaz García",
      "Raúl Gómez",
      "Laura Vilchez",
      "Matías Ávila",
      "Lorena Rojas"
    ]
  },
  {
    id: 9,
    name: "Ciudadanos",
    leader: "Héctor Baldassi",
    color: "#16A085",
    candidates: [
      "Héctor Baldassi",
      "Yanina Vargas",
      "Martin Puig",
      "Melisa Cabrera",
      "Pablo Mussat",
      "Ivana Pepino",
      "Santiago Piñeiro",
      "María Lagger",
      "Héctor Carcar"
    ]
  },
  {
    id: 10,
    name: "Partido Demócrata",
    leader: "Rodolfo Eiben",
    color: "#2E86AB",
    candidates: [
      "Rodolfo Eiben",
      "Patricia Messio",
      "Teodoro Funes",
      "María del Carmen Centeno",
      "José Antonio Soria",
      "Silvana Palacios",
      "Eduardo Arias",
      "Alicia Engel",
      "Ramiro Pohle"
    ]
  },
  {
    id: 11,
    name: "Frente Federal de Acción Solidaria",
    leader: "Stefano López Chiodi (Alfajor Tatín)",
    color: "#D35400",
    candidates: [
      "Stefano López Chiodi (Alfajor Tatín)",
      "Paola Irusta",
      "Esteban Ezequiel Vivas",
      "Anahí Cabral",
      "Marcelo Gómez Quevedo",
      "Adriana Rearte",
      "Rubén Maurenzi",
      "Daiana Santi",
      "Mario Matteucci"
    ]
  },
  {
    id: 12,
    name: "Partido Libertario",
    leader: "Agustín Spaccesi",
    color: "#F39C12",
    candidates: [
      "Agustín Spaccesi",
      "Julieta Ceballos",
      "Germán Cassinerio",
      "María Graciela Giordano",
      "Diego Settimo",
      "María Jimena Quaino",
      "Esteban Chiabo",
      "María Eugenia Merlini",
      "José Luis Carrera"
    ]
  },
  {
    id: 13,
    name: "Nuevo MAS",
    leader: "Julia Di Santi",
    color: "#9B59B6",
    candidates: [
      "Julia Di Santi",
      "Eduardo Mulhall",
      "Davina Maccioni",
      "Franco Bergero",
      "Malena Mulhall",
      "Miguel Díaz",
      "Noelia García",
      "Mateo Romero",
      "María Andrea Ruiz"
    ]
  },
  {
    id: 14,
    name: "Acción para el Cambio",
    leader: "Alfredo Keegan",
    color: "#1ABC9C",
    candidates: [
      "Alfredo Keegan",
      "Paola Rimieri",
      "Marcelo Cordero",
      "Lorena Gay Valdez",
      "José Olivares",
      "Jimena Zabala",
      "Adolfo Rutgerson",
      "María Arroyo",
      "Mario López"
    ]
  },
  {
    id: 15,
    name: "Alianza Córdoba Te Quiero",
    leader: "Gerardo Lucero",
    color: "#E67E22",
    candidates: [
      "Gerardo Lucero",
      "Miriam Alejo",
      "Pablo Leonardo Tulian",
      "Érica Tomatis",
      "Gerardo Nieva Allue",
      "Adriana Quinteros",
      "Raúl Costa",
      "María Romero",
      "Rubén Bertolina"
    ]
  },
  {
    id: 16,
    name: "Partido PAIS",
    leader: "Edgar Bruno",
    color: "#27AE60",
    candidates: [
      "Edgar Bruno",
      "Patricia González",
      "Rubén Bustos",
      "María Castro",
      "Antonio Spagno",
      "Gladys Heredia",
      "Lucas Lazarte",
      "Lucia Toledo",
      "Adrián López"
    ]
  },
  {
    id: 17,
    name: "Fe",
    leader: "Juan Carlos Saillen",
    color: "#8E44AD",
    candidates: [
      "Juan Carlos Saillen",
      "Celeste Giacchetta",
      "Fernando Mancinelli",
      "Mónica Grandi",
      "Aldo Ortega",
      "Ana Escobedo",
      "Rodrigo de Toro",
      "Liliana Prado",
      "Edgardo Sargiotto"
    ]
  },
  {
    id: 18,
    name: "Unión Popular Federal",
    leader: "Mario Peral",
    color: "#34495E",
    candidates: [
      "Mario Peral",
      "Mariela Ramallo",
      "Ariel Luque",
      "Carmen Oliva",
      "José Sandoval",
      "Evangelina Cobos",
      "Luis Heredia",
      "Carolina Aguilanti",
      "Sergio Quinteros"
    ]
  }
];

const totalElectors = 3125183;
const totalSeats = 9;
---

<div class="simulator-container">
  <h1>Simulador Electoral D'Hont - Córdoba 2025</h1>
  <p class="subtitle">Padrón Electoral: {totalElectors.toLocaleString()} electores | {totalSeats} diputados a elegir</p>
  <p class="subtitle">idea y desarrollo: maxiviento</p>
  <div class="input-section">
    <div class="participation-input">
      <label for="participation">Participación Electoral (%):</label>
      <input type="number" id="participation" min="0" max="100" value="75" step="0.1">
    </div>
    
    <div class="results-inputs">
      <h3>Resultados Electorales (%):</h3>
      
      <!-- Voto en Blanco (Obligatorio) -->
      <div class="blank-vote-input">
        <label for="blank-vote">Voto en Blanco (obligatorio):</label>
        <input type="number" id="blank-vote" min="0" max="100" value="5" step="0.1" required>
      </div>
      
      <h4>Principales Listas (cargar al menos 4):</h4>
      {electoralLists.slice(0, 6).map((list) => (
        <div class="list-input main-list" style={`border-left: 4px solid ${list.color}`}>
          <label for={`list-${list.id}`}>{list.name}:</label>
          <input type="number" id={`list-${list.id}`} min="0" max="100" value="0" step="0.1" data-list-id={list.id} class="main-list-input">
        </div>
      ))}
      
      <div class="auto-distribution-info">
        <p><strong>Distribución Automática:</strong> El resto de votos se distribuirá proporcionalmente entre las otras 12 listas</p>
        <div id="auto-distribution-display" class="auto-distribution-display">
          <!-- Se mostrará la distribución automática aquí -->
        </div>
      </div>
      
      <details class="other-lists-section">
        <summary>Ver todas las listas (opcional - solo lectura)</summary>
        <div class="other-lists-grid">
          {electoralLists.slice(6).map((list) => (
            <div class="list-input readonly-list" style={`border-left: 4px solid ${list.color}`}>
              <label>{list.name}:</label>
              <span id={`list-${list.id}-display`} class="auto-percentage">0.00%</span>
            </div>
          ))}
        </div>
      </details>
    </div>
    
    <button id="calculate-btn" class="calculate-button">Calcular Resultados</button>
  </div>
  
  <div class="results-section" id="results-section" style="display: none;">
    <div class="bg-gray-50 p-8 rounded-2xl shadow-xl mx-auto max-w-7xl mt-8">
      <h2 class="text-4xl font-bold text-center bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-8">Resultados de la Simulación</h2>
      
      <div class="elected-deputies" id="elected-deputies">
        <!-- Elected deputies will be populated by JavaScript -->
      </div>
      
      <div class="summary-stats" id="summary-stats">
        <!-- Stats will be populated by JavaScript -->
      </div>
      
      <div class="seats-distribution" id="seats-distribution">
        <!-- Seats distribution will be populated by JavaScript -->
      </div>
      
      <div class="dhont-table" id="dhont-table">
        <!-- D'Hont calculation table will be populated by JavaScript -->
      </div>
    </div>
  </div>
</div>

<script define:vars={{ electoralLists, totalElectors, totalSeats }}>
  // Algoritmo D'Hont con tracking detallado
  function calculateDHont(votes, seats) {
    const results = electoralLists.map((list, index) => ({
      ...list,
      votes: votes[index] || 0,
      seats: 0,
      quotients: []
    }));
    
    const seatAssignments = []; // Para trackear cada asignación
    
    // Calcular cocientes para cada lista
    for (let seat = 1; seat <= seats; seat++) {
      let maxQuotient = 0;
      let winnerIndex = -1;
      let currentQuotients = [];
      
      results.forEach((list, index) => {
        const quotient = list.votes / (list.seats + 1);
        currentQuotients.push({
          listIndex: index,
          listName: list.name,
          votes: list.votes,
          divisor: list.seats + 1,
          quotient: quotient
        });
        
        if (quotient > maxQuotient) {
          maxQuotient = quotient;
          winnerIndex = index;
        }
      });
      
      if (winnerIndex >= 0) {
        results[winnerIndex].seats++;
        seatAssignments.push({
          seatNumber: seat,
          winner: results[winnerIndex].name,
          winnerColor: results[winnerIndex].color,
          candidateName: results[winnerIndex].candidates[results[winnerIndex].seats - 1],
          quotient: maxQuotient,
          votes: results[winnerIndex].votes,
          divisor: results[winnerIndex].seats,
          allQuotients: [...currentQuotients].sort((a, b) => b.quotient - a.quotient)
        });
      }
    }
    
    return { results, seatAssignments };
  }
  
  function calculateResults() {
    const participation = parseFloat(document.getElementById('participation').value) || 0;
    const blankVote = parseFloat(document.getElementById('blank-vote').value) || 0;
    
    // Obtener porcentajes de las listas principales (primeras 6)
    const mainListPercentages = [];
    let totalMainPercentage = 0;
    
    for (let i = 0; i < 6; i++) {
      const list = electoralLists[i];
      const percentage = parseFloat(document.getElementById(`list-${list.id}`).value) || 0;
      mainListPercentages.push(percentage);
      totalMainPercentage += percentage;
    }
    
    // Validar que se hayan cargado al menos 4 listas principales
    const loadedMainLists = mainListPercentages.filter(p => p > 0).length;
    if (loadedMainLists < 4) {
      alert('Debe cargar al menos 4 listas principales');
      return;
    }
    
    // Validar que la suma no exceda 100%
    if (totalMainPercentage + blankVote > 100) {
      alert('La suma de porcentajes + voto en blanco no puede exceder 100%');
      return;
    }
    
    // Calcular porcentaje restante para distribuir entre las otras 12 listas
    const remainingPercentage = 100 - totalMainPercentage - blankVote;
    const otherListsCount = electoralLists.length - 6; // 12 listas restantes
    const autoPercentagePerList = remainingPercentage / otherListsCount;
    
    // Crear array completo de porcentajes
    const allPercentages = [...mainListPercentages];
    for (let i = 6; i < electoralLists.length; i++) {
      allPercentages.push(autoPercentagePerList);
    }
    
    // Actualizar display de distribución automática
    updateAutoDistributionDisplay(autoPercentagePerList, remainingPercentage);
    
    // Calcular votos totales
    const totalVotes = Math.round(totalElectors * (participation / 100));
    const blankVotes = Math.round(totalVotes * (blankVote / 100));
    const validVotes = totalVotes - blankVotes; // Votos válidos para partidos
    
    // Calcular votos por lista (solo votos válidos se distribuyen)
    const votes = allPercentages.map(percentage => 
      Math.round(validVotes * (percentage / (100 - blankVote)))
    );
    
    // Aplicar D'Hont
    const dhontResult = calculateDHont(votes, totalSeats);
    
    // Mostrar resultados
    displayResults(dhontResult, totalVotes, participation, blankVotes, allPercentages);
  }
  
  function updateAutoDistributionDisplay(percentagePerList, totalRemaining) {
    const display = document.getElementById('auto-distribution-display');
    display.innerHTML = `
      <p>Porcentaje restante: <strong>${totalRemaining.toFixed(2)}%</strong></p>
      <p>Distribuido automáticamente: <strong>${percentagePerList.toFixed(2)}%</strong> por cada una de las 12 listas restantes</p>
    `;
    
    // Actualizar displays individuales
    for (let i = 6; i < electoralLists.length; i++) {
      const list = electoralLists[i];
      const displayElement = document.getElementById(`list-${list.id}-display`);
      if (displayElement) {
        displayElement.textContent = `${percentagePerList.toFixed(2)}%`;
      }
    }
  }
  
  function displayResults(dhontResult, totalVotes, participation, blankVotes, allPercentages) {
    const { results, seatAssignments } = dhontResult;
    const resultsSection = document.getElementById('results-section');
    const summaryStats = document.getElementById('summary-stats');
    const seatsDistribution = document.getElementById('seats-distribution');
    const dhontTable = document.getElementById('dhont-table');
    const electedDeputies = document.getElementById('elected-deputies');
    
    const validVotes = totalVotes - blankVotes;
    
    // Estadísticas generales con diseño moderno
    summaryStats.innerHTML = `
      <div class="mb-12">
        <h2 class="text-3xl font-bold text-center bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-8">
          📊 Resumen Electoral
        </h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          <!-- Participación Electoral -->
          <div class="bg-gradient-to-br from-blue-50 to-blue-100 border border-blue-200 rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
            <div class="flex items-center justify-between mb-4">
              <div class="bg-blue-500 p-3 rounded-xl">
                <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                </svg>
              </div>
              <div class="text-right">
                <div class="text-3xl font-bold text-blue-600">${participation}%</div>
              </div>
            </div>
            <h3 class="font-semibold text-gray-700 mb-2">Participación Electoral</h3>
            <p class="text-sm text-gray-600">${totalVotes.toLocaleString()} votos emitidos</p>
          </div>

          <!-- Votos en Blanco -->
          <div class="bg-gradient-to-br from-gray-50 to-gray-100 border border-gray-200 rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
            <div class="flex items-center justify-between mb-4">
              <div class="bg-gray-500 p-3 rounded-xl">
                <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
                </svg>
              </div>
              <div class="text-right">
                <div class="text-3xl font-bold text-gray-600">${((blankVotes / totalVotes) * 100).toFixed(2)}%</div>
              </div>
            </div>
            <h3 class="font-semibold text-gray-700 mb-2">Votos en Blanco</h3>
            <p class="text-sm text-gray-600">${blankVotes.toLocaleString()} votos</p>
          </div>

          <!-- Votos Válidos -->
          <div class="bg-gradient-to-br from-green-50 to-green-100 border border-green-200 rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
            <div class="flex items-center justify-between mb-4">
              <div class="bg-green-500 p-3 rounded-xl">
                <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                </svg>
              </div>
              <div class="text-right">
                <div class="text-3xl font-bold text-green-600">${validVotes.toLocaleString()}</div>
              </div>
            </div>
            <h3 class="font-semibold text-gray-700 mb-2">Votos Válidos</h3>
            <p class="text-sm text-gray-600">${((validVotes / totalVotes) * 100).toFixed(2)}% del total</p>
          </div>

          <!-- Bancas Asignadas -->
          <div class="bg-gradient-to-br from-red-50 to-red-100 border border-red-200 rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
            <div class="flex items-center justify-between mb-4">
              <div class="bg-red-500 p-3 rounded-xl">
                <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v3.57A22.952 22.952 0 0110 13a22.95 22.95 0 01-8-1.43V8a2 2 0 012-2h2zm2-1a1 1 0 011-1h2a1 1 0 011 1v1H8V5zm1 5a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z" clip-rule="evenodd"/>
                  <path d="M2 13.692V16a2 2 0 002 2h12a2 2 0 002-2v-2.308A24.974 24.974 0 0110 15c-2.796 0-5.487-.46-8-1.308z"/>
                </svg>
              </div>
              <div class="text-right">
                <div class="text-3xl font-bold text-red-600">${results.reduce((sum, r) => sum + r.seats, 0)}</div>
              </div>
            </div>
            <h3 class="font-semibold text-gray-700 mb-2">Bancas Asignadas</h3>
            <p class="text-sm text-gray-600">${results.reduce((sum, r) => sum + r.seats, 0)} / ${totalSeats} diputados</p>
          </div>
        </div>
      </div>
    `;
    
    // Resultados electorales con diseño premium
    seatsDistribution.innerHTML = `
      <div class="mb-12">
        <h2 class="text-4xl font-bold text-center bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent mb-4">
          🏆 Resultados Electorales
        </h2>
        <p class="text-center text-gray-600 mb-10 text-lg">Distribución de bancas y diputados electos por partido político</p>
        
        <div class="flex flex-wrap gap-6 justify-center">
          ${results.filter(list => list.seats > 0).map((list, index) => `
            <div class="group relative bg-white rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-500 hover:-translate-y-2 overflow-hidden border border-gray-100 flex-1 min-w-[320px] max-w-[400px]">
              <!-- Decorative top bar -->
              <div class="h-2 w-full" style="background: linear-gradient(90deg, ${list.color} 0%, ${list.color}88 100%)"></div>
              
              <!-- Header premium -->
              <div class="relative p-6 pb-4">
                <div class="absolute top-3 right-3 opacity-10">
                  <svg class="w-12 h-12 sm:w-16 sm:h-16" style="color: ${list.color}" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v3.57A22.952 22.952 0 0110 13a22.95 22.95 0 01-8-1.43V8a2 2 0 012-2h2zm2-1a1 1 0 011-1h2a1 1 0 011 1v1H8V5zm1 5a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z" clip-rule="evenodd"/>
                    <path d="M2 13.692V16a2 2 0 002 2h12a2 2 0 002-2v-2.308A24.974 24.974 0 0110 15c-2.796 0-5.487-.46-8-1.308z"/>
                  </svg>
                </div>
                
                <div class="flex items-start space-x-3 relative z-10">
                  <div class="w-12 h-12 sm:w-16 sm:h-16 rounded-2xl shadow-lg flex items-center justify-center text-white font-bold text-lg sm:text-xl flex-shrink-0" style="background: linear-gradient(135deg, ${list.color} 0%, ${list.color}cc 100%)">
                    ${index + 1}°
                  </div>
                  <div class="flex-1 min-w-0">
                    <h3 class="text-lg sm:text-xl font-bold text-gray-800 mb-1 leading-tight truncate">${list.name}</h3>
                    <p class="text-sm text-gray-600 italic mb-2 truncate">${list.leader}</p>
                    <div class="flex items-center space-x-2">
                      <div class="text-2xl sm:text-3xl font-black" style="color: ${list.color}">${list.seats}</div>
                      <div class="text-xs sm:text-sm text-gray-500 font-medium">${list.seats === 1 ? 'Banca' : 'Bancas'}</div>
                    </div>
                  </div>
                </div>
              </div>
              
              <!-- Stats section -->
              <div class="px-6 pb-6">
                <div class="bg-gradient-to-r from-gray-50 to-gray-100 rounded-2xl p-4 mb-4">
                  <div class="flex flex-col sm:flex-row sm:justify-between sm:items-center gap-2">
                    <div class="flex-1">
                      <p class="text-xs text-gray-500 font-medium uppercase tracking-wide mb-1">Votos Obtenidos</p>
                      <p class="text-xl sm:text-2xl font-bold text-gray-800">${list.votes.toLocaleString()}</p>
                    </div>
                    <div class="flex-shrink-0">
                      <div class="inline-flex items-center px-3 py-1 rounded-full text-sm font-semibold" style="background-color: ${list.color}22; color: ${list.color}">
                        ${((list.votes / validVotes) * 100).toFixed(2)}%
                      </div>
                    </div>
                  </div>
                </div>
                
                <!-- Diputados electos -->
                <div>
                  <h4 class="text-sm font-bold text-gray-700 mb-3 flex items-center">
                    <svg class="w-4 h-4 mr-2 flex-shrink-0" style="color: ${list.color}" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"/>
                    </svg>
                    Diputados Electos
                  </h4>
                  <div class="space-y-2">
                    ${list.candidates.slice(0, list.seats).map((candidate, idx) => `
                      <div class="flex items-center space-x-3 p-3 bg-white rounded-xl border border-gray-100 hover:shadow-md transition-all duration-200">
                        <div class="w-7 h-7 sm:w-8 sm:h-8 rounded-full flex items-center justify-center text-white font-bold text-xs sm:text-sm shadow-md flex-shrink-0" style="background: linear-gradient(135deg, ${list.color} 0%, ${list.color}cc 100%)">
                          ${idx + 1}
                        </div>
                        <span class="font-medium text-gray-800 flex-1 text-sm sm:text-base truncate">${candidate}</span>
                        <div class="w-2 h-2 rounded-full flex-shrink-0" style="background-color: ${list.color}"></div>
                      </div>
                    `).join('')}
                  </div>
                </div>
              </div>
            </div>
          `).join('')}
        </div>
      </div>
    `;
    
    // Sección integrada - no se necesita contenido adicional
    electedDeputies.innerHTML = '';
    
    // Tabla D'Hont estilo matriz - solo partidos con bancas
    const partiesWithSeats = results.filter(party => party.seats > 0);
    
    dhontTable.innerHTML = `
      <div class="mt-16">
        <h3 class="text-3xl font-bold text-center bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent mb-6">
          📋 Tabla D'Hont - Proceso de Asignación de Bancas
        </h3>
        
        <!-- Explicación del método -->
        <div class="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-2xl p-6 mb-8 shadow-lg">
          <h4 class="text-xl font-bold text-blue-800 mb-4 flex items-center">
            <svg class="w-6 h-6 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/>
            </svg>
            ¿Cómo funciona el método D'Hont?
          </h4>
          <div class="grid md:grid-cols-2 gap-6">
            <div>
              <p class="text-gray-700 mb-3"><strong>Paso 1:</strong> Se dividen los votos de cada partido por 1, 2, 3, 4, etc.</p>
              <p class="text-gray-700 mb-3"><strong>Paso 2:</strong> Se ordenan todos los cocientes de mayor a menor</p>
              <p class="text-gray-700"><strong>Paso 3:</strong> Los ${totalSeats} cocientes más altos obtienen las bancas</p>
            </div>

          </div>
        </div>

        <!-- Orden de asignación de bancas -->
        <div class="bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-2xl p-6 mb-8 shadow-lg">
          <h4 class="text-xl font-bold text-green-800 mb-4 flex items-center">
            <svg class="w-6 h-6 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"/>
            </svg>
            Orden de Asignación de Bancas
          </h4>
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            ${seatAssignments.map((assignment, index) => `
              <div class="bg-white rounded-xl p-4 border-l-4 shadow-md hover:shadow-lg transition-all duration-200" style="border-left-color: ${assignment.winnerColor}">
                <div class="flex items-center justify-between mb-2">
                  <span class="text-2xl font-bold text-gray-800">${index + 1}°</span>
                  <div class="text-sm text-gray-500">Cociente: ${assignment.quotient.toLocaleString('es-AR', {maximumFractionDigits: 2})}</div>
                </div>
                <div class="text-sm font-semibold text-gray-700 mb-1">${assignment.winner}</div>
                <div class="text-xs text-gray-600">${assignment.candidateName}</div>
                <div class="text-xs text-gray-500 mt-2">
                  ${assignment.votes.toLocaleString()} ÷ ${assignment.divisor} = ${assignment.quotient.toLocaleString('es-AR', {maximumFractionDigits: 2})}
                </div>
              </div>
            `).join('')}
          </div>
        </div>

        <!-- Tabla de cocientes -->
        <div class="overflow-x-auto my-8 rounded-xl shadow-lg">
          <h4 class="text-lg font-bold text-gray-800 mb-6 text-center">Tabla de Cocientes Completa</h4>
          <table class="w-full bg-white rounded-xl overflow-hidden shadow-md border border-gray-200" style="min-width: 900px;">
            <thead>
              <tr class="bg-gradient-to-r from-gray-50 to-gray-100">
                <th class="text-left px-6 py-5 font-bold text-gray-700 border-b-2 border-gray-200 text-base" style="min-width: 220px;">PARTIDO</th>
                <th class="text-center px-4 py-5 font-bold text-gray-700 border-b-2 border-gray-200 text-sm uppercase tracking-wide" style="min-width: 140px;">VOTOS</th>
                ${Array.from({length: Math.max(...partiesWithSeats.map(p => p.seats)) + 2}, (_, i) => 
                  `<th class="text-center px-4 py-5 font-extrabold text-gray-600 border-b-2 border-gray-200 text-base" style="min-width: 120px;">÷${i + 1}</th>`
                ).join('')}
              </tr>
            </thead>
            <tbody>
              ${partiesWithSeats.map((party, rowIndex) => {
                const maxDivisor = Math.max(party.seats + 2, 6);
                const isEvenRow = rowIndex % 2 === 1;
                return `
                  <tr class="${isEvenRow ? 'bg-gray-50' : 'bg-white'}">
                    <td class="px-6 py-6 border-b border-gray-200 font-bold text-white" style="background-color: ${party.color}; ${isEvenRow ? 'opacity: 0.95;' : ''}">
                      <div class="flex flex-col gap-1.5">
                        <div class="text-sm font-bold leading-tight">${party.name.length > 20 ? party.name.substring(0, 20) + '...' : party.name}</div>
                        <div class="text-xs opacity-90 font-medium">${party.seats} bancas</div>
                      </div>
                    </td>
                    <td class="px-4 py-6 text-center font-bold text-gray-700 border-b border-gray-200 text-base ${isEvenRow ? 'bg-gray-100' : 'bg-gray-50'}">${party.votes.toLocaleString()}</td>
                    ${Array.from({length: maxDivisor}, (_, divisor) => {
                      const quotient = party.votes / (divisor + 1);
                      const assignment = seatAssignments.find(a => 
                        a.winner === party.name && a.divisor === divisor + 1
                      );
                      const isWinning = !!assignment;
                      const seatNumber = assignment ? seatAssignments.indexOf(assignment) + 1 : '';
                      
                      const baseClasses = "px-4 py-6 text-center font-semibold border-b border-gray-200 text-base relative transition-all duration-200";
                      const bgClasses = isWinning 
                        ? "bg-gradient-to-br from-green-500 to-green-600 text-white font-extrabold shadow-lg border-2 border-green-500" 
                        : `${isEvenRow ? 'bg-gray-50' : 'bg-white'} text-gray-800 hover:bg-gray-100 hover:scale-105`;
                      
                      return `
                        <td class="${baseClasses} ${bgClasses}" style="min-height: 70px; vertical-align: middle;" ${isWinning ? `title="Banca #${seatNumber} - ${assignment.candidateName}"` : ''}>
                          ${quotient.toLocaleString('es-AR', {maximumFractionDigits: 2})}
                          ${isWinning ? `
                            <div class="absolute top-1.5 left-2 bg-white bg-opacity-95 text-green-600 text-xs font-extrabold px-1.5 py-0.5 rounded shadow-sm">#${seatNumber}</div>
                            <div class="absolute top-1.5 right-2 text-sm font-bold">✓</div>
                          ` : ''}
                        </td>
                      `;
                    }).join('')}
                  </tr>
                `;
              }).join('')}
            </tbody>
          </table>
        </div>
        
        <div class="dhont-legend">
          <div class="grid md:grid-cols-2 gap-6">
            <div>
              <p class="font-bold text-gray-800 mb-3">🔢 Interpretación:</p>
              <ul class="space-y-2 text-sm text-gray-700">
                <li>• Cada columna representa la división por 1, 2, 3, etc.</li>
                <li>• Los ${totalSeats} cocientes más altos obtienen las bancas</li>
                <li>• Solo se muestran partidos que obtuvieron al menos una banca</li>
                <li>• Pasa el cursor sobre las celdas verdes para ver detalles</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    `;
    
    
    resultsSection.style.display = 'block';
    resultsSection.scrollIntoView({ behavior: 'smooth' });
  }
  
  // Event listeners
  document.getElementById('calculate-btn').addEventListener('click', calculateResults);
  
  // Auto-calculate on input change and select on click
  document.querySelectorAll('input[type="number"]').forEach(input => {
    // Auto-select text when input is clicked
    input.addEventListener('click', function() {
      this.select();
    });
    
    // Also select when focused via keyboard
    input.addEventListener('focus', function() {
      this.select();
    });
    
    input.addEventListener('input', () => {
      // Auto-update distribution display
      updateAutoDistributionOnChange();
      
      if (document.getElementById('results-section').style.display !== 'none') {
        calculateResults();
      }
    });
  });
  
  function updateAutoDistributionOnChange() {
    const blankVote = parseFloat(document.getElementById('blank-vote').value) || 0;
    let totalMainPercentage = 0;
    
    for (let i = 0; i < 6; i++) {
      const list = electoralLists[i];
      const percentage = parseFloat(document.getElementById(`list-${list.id}`).value) || 0;
      totalMainPercentage += percentage;
    }
    
    if (totalMainPercentage + blankVote <= 100) {
      const remainingPercentage = 100 - totalMainPercentage - blankVote;
      const otherListsCount = electoralLists.length - 6;
      const autoPercentagePerList = remainingPercentage / otherListsCount;
      
      updateAutoDistributionDisplay(autoPercentagePerList, remainingPercentage);
    }
  }
  
  // Initial auto-distribution display
  updateAutoDistributionOnChange();
</script>

<style>
  .simulator-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
    background: rgba(255, 255, 255, 0.95);
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    margin-top: 20px;
    margin-bottom: 20px;
  }
  
  h1 {
    text-align: center;
    color: #2c3e50;
    margin-bottom: 10px;
    font-size: 2.5em;
  }
  
  .subtitle {
    text-align: center;
    color: #7f8c8d;
    font-size: 1.1em;
    margin-bottom: 30px;
  }
  
  .input-section {
    background: #f8f9fa;
    padding: 25px;
    border-radius: 10px;
    margin-bottom: 30px;
  }
  
  .participation-input {
    margin-bottom: 25px;
  }
  
  .participation-input label {
    display: block;
    font-weight: bold;
    margin-bottom: 8px;
    color: #2c3e50;
  }
  
  .participation-input input {
    width: 200px;
    padding: 10px;
    border: 2px solid #bdc3c7;
    border-radius: 5px;
    font-size: 16px;
  }
  
  .results-inputs h3 {
    color: #2c3e50;
    margin-bottom: 15px;
  }
  
  .list-input {
    display: flex;
    align-items: center;
    margin-bottom: 15px;
    padding: 10px;
    background: white;
    border-radius: 5px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  }
  
  .list-input label {
    flex: 1;
    font-weight: bold;
    color: #2c3e50;
  }
  
  .list-input input {
    width: 100px;
    padding: 8px;
    border: 2px solid #bdc3c7;
    border-radius: 5px;
    text-align: center;
  }
  
  .calculate-button {
    background: linear-gradient(135deg, #3498db, #2980b9);
    color: white;
    border: none;
    padding: 15px 30px;
    font-size: 18px;
    font-weight: bold;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    display: block;
    margin: 20px auto 0;
  }
  
  .calculate-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(52, 152, 219, 0.4);
  }
  
  .results-section {
    margin-top: 30px;
  }
  
  /* Estilos CSS tradicionales eliminados - usando solo Tailwind */
  
  .deputies-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 20px;
  }
  
  .deputy-list {
    background: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    border-left: 5px solid;
  }
  
  .deputy-list h4 {
    margin: 0 0 15px 0;
    font-size: 1.2em;
  }
  
  .deputy-list ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  .deputy-item {
    display: flex;
    align-items: center;
    padding: 8px 0;
    border-bottom: 1px solid #ecf0f1;
  }
  
  .deputy-item:last-child {
    border-bottom: none;
  }
  
  .deputy-number {
    background: #6c757d;
    color: white;
    width: 25px;
    height: 25px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    font-size: 12px;
    margin-right: 10px;
  }
  
  .deputy-name {
    font-weight: 500;
    color: #2c3e50;
  }
  
  .dhont-matrix-container {
    overflow-x: auto;
    margin: 20px 0;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  }
  
  .dhont-matrix-table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
    background: white;
    font-size: 16px;
    min-width: 900px;
    border: 1px solid #dee2e6;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
  
  .dhont-matrix-table th {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    color: #495057;
    padding: 20px 16px;
    text-align: center;
    font-weight: 700;
    border-bottom: 2px solid #dee2e6;
    border-right: 1px solid #dee2e6;
    font-size: 14px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .dhont-matrix-table th:last-child {
    border-right: none;
  }
  
  .party-header {
    min-width: 220px;
    text-align: left !important;
    padding-left: 20px;
    text-transform: none;
    font-size: 16px;
  }
  
  .votes-header {
    min-width: 140px;
    font-size: 14px;
  }
  
  .divisor-header {
    min-width: 120px;
    font-size: 16px;
    font-weight: 800;
    color: #6c757d;
  }
  
  .party-cell {
    padding: 24px 20px;
    text-align: left;
    font-weight: bold;
    border-bottom: 1px solid #dee2e6;
    border-right: 1px solid #dee2e6;
    min-width: 220px;
    font-size: 14px;
    vertical-align: middle;
  }
  
  .party-info {
    display: flex;
    flex-direction: column;
    gap: 6px;
  }
  
  .party-name {
    font-size: 15px;
    font-weight: 700;
    line-height: 1.2;
  }
  
  .seats-count {
    font-size: 12px;
    opacity: 0.9;
    font-weight: 500;
  }
  
  .votes-cell {
    padding: 24px 16px;
    text-align: center;
    font-weight: 700;
    color: #495057;
    border-bottom: 1px solid #dee2e6;
    border-right: 1px solid #dee2e6;
    background: #f8f9fa;
    font-size: 16px;
    vertical-align: middle;
  }
  
  .quotient-cell {
    padding: 24px 16px;
    text-align: center;
    border-bottom: 1px solid #dee2e6;
    border-right: 1px solid #dee2e6;
    font-weight: 600;
    background: white;
    font-size: 16px;
    min-height: 70px;
    vertical-align: middle;
    position: relative;
    transition: all 0.2s ease;
  }
  
  .quotient-cell:hover {
    background: #f8f9fa;
    transform: scale(1.02);
  }
  
  .quotient-cell:last-child {
    border-right: none;
  }
  
  .winning-quotient {
    background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%) !important;
    color: white !important;
    font-weight: 800 !important;
    position: relative;
    box-shadow: 0 2px 8px rgba(39, 174, 96, 0.3);
    border: 2px solid #27ae60 !important;
  }
  
  .winning-quotient:hover {
    background: linear-gradient(135deg, #229954 0%, #27ae60 100%) !important;
    transform: scale(1.05) !important;
    box-shadow: 0 4px 12px rgba(39, 174, 96, 0.4);
  }
  
  .winning-quotient::after {
    content: "✓";
    position: absolute;
    top: 6px;
    right: 8px;
    font-size: 14px;
    font-weight: bold;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  }

  .seat-number {
    position: absolute;
    top: 6px;
    left: 8px;
    background: rgba(255, 255, 255, 0.95);
    color: #27ae60;
    font-size: 11px;
    font-weight: 800;
    padding: 2px 6px;
    border-radius: 4px;
    line-height: 1;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
  }
  
  .dhont-matrix-table tbody tr:nth-child(even) .quotient-cell:not(.winning-quotient) {
    background: #f8f9fa;
  }
  
  .dhont-matrix-table tbody tr:nth-child(even) .party-cell {
    opacity: 0.95;
  }
  
  .dhont-matrix-table tbody tr:nth-child(even) .votes-cell {
    background: #e9ecef;
  }
  
  .dhont-matrix-table tbody tr:last-child td {
    border-bottom: none;
  }
  
  .dhont-legend {
    background: #e8f4fd;
    border: 1px solid #bee5eb;
    border-radius: 8px;
    padding: 15px;
    margin-top: 15px;
  }
  
  .dhont-legend p {
    margin: 0 0 10px 0;
    font-weight: bold;
    color: #2c3e50;
  }
  
  .dhont-legend ul {
    margin: 0;
    padding-left: 20px;
  }
  
  .dhont-legend li {
    margin-bottom: 5px;
    color: #495057;
  }
  
  .legend-winning {
    display: inline-block;
    width: 20px;
    height: 15px;
    background: #27ae60;
    border-radius: 3px;
    margin-right: 8px;
    vertical-align: middle;
  }
  
  /* Estilos para voto en blanco y distribución automática */
  .blank-vote-input {
    background: #fff3cd;
    border: 2px solid #ffc107;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 20px;
  }
  
  .blank-vote-input label {
    display: block;
    font-weight: bold;
    margin-bottom: 8px;
    color: #856404;
  }
  
  .blank-vote-input input {
    width: 200px;
    padding: 10px;
    border: 2px solid #ffc107;
    border-radius: 5px;
    font-size: 16px;
    background: white;
  }
  
  .main-list {
    border-left-width: 6px !important;
  }
  
  .auto-distribution-info {
    background: #e7f3ff;
    border: 2px solid #007bff;
    border-radius: 8px;
    padding: 15px;
    margin: 20px 0;
  }
  
  .auto-distribution-display {
    margin-top: 10px;
    font-size: 14px;
  }
  
  .auto-distribution-display p {
    margin: 5px 0;
  }
  
  .other-lists-section {
    margin-top: 20px;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    padding: 15px;
  }
  
  .other-lists-section summary {
    font-weight: bold;
    cursor: pointer;
    padding: 10px;
    background: #f8f9fa;
    border-radius: 5px;
    margin-bottom: 15px;
  }
  
  .other-lists-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 10px;
    margin-top: 15px;
  }
  
  .readonly-list {
    background: #f8f9fa;
    opacity: 0.8;
  }
  
  .readonly-list label {
    font-size: 14px;
  }
  
  .auto-percentage {
    font-weight: bold;
    color: #007bff;
    background: white;
    padding: 5px 10px;
    border-radius: 3px;
    border: 1px solid #007bff;
  }
  
  @media (max-width: 768px) {
    .simulator-container {
      margin: 10px;
      padding: 15px;
    }
    
    h1 {
      font-size: 2em;
    }
    
    .list-input {
      flex-direction: column;
      align-items: flex-start;
    }
    
    .list-input input {
      margin-top: 5px;
      width: 100%;
    }
    
    .stats-grid {
      grid-template-columns: 1fr;
    }
    
    .seats-grid {
      grid-template-columns: 1fr;
    }
    
    .deputies-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
